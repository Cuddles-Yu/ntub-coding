2024/05/16 - 提取留言文本關鍵字
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 資料庫讀取
      - 取得所有商家內包含的所有留言
      - 逐一將其透過Jieba套件拆分文本內容
      - 商家「辭典列表」紀錄所有留言的詞彙頻率
   2. 儲存辭典列表
      - 將所有辭典列表逐一寫入至log.txt檔案中
      - 以利檢查辭典列表中的詞彙是否為理想的關鍵字
   3. 提取辭典列表
      - 逐一設定每個詞彙對應的類別
      - 設定代碼: 0:保留 1:排除 2:程度 3:符號 4:形容
      - 對應代碼後append寫入詞彙至對應辭典檔案中
   4. 辭典檔案
      - 新增多個不同類別的「排除辭典」
        * symbol: 符號
        * level: 程度副詞
        * adjective: 形容詞
        * exception: 無分類


2024/05/10 - 爬蟲保護機制
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 最大等待時間
      - 紀錄特定瀏覽動作的等待時間
      - 檢查是否持續一段時間皆未出現新的結果
        ① 若取得搜尋結果時超過等待時間將重新瀏覽頁面
        ② 已超時：若爬取所有評論時超過等待時間將自動略過此次爬取
   2. 評估商家的總評分數
      - 多評論：高於特定數量則略過此次爬取
      - 無評論：為0則自動略過此次爬取
二、優化功能
   1. 取得商家圖片
      - 不再從搜尋結果中直接取得
      - 後續由瀏覽各商家時統一儲存圖片連結
   2. 網頁瀏覽器等待時間
      - 原先的固定10秒→隨參數MAXIMUM_TIMEOUT而變


2024/05/03 - 初步文本斷詞分析
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 透過Jieba套件拆分文本內容
      - 將留言內容依特定詞彙斷詞
      - 計算每個詞出現的頻率
   2. 使用者定義辭典(userdict)
      - 某些詞彙可能過於新穎無法被正確識別
      - 載入自己定義的辭典以貼近斷詞需求
二、參考資料
   1. https://reurl.cc/LW6nje | Python — 中文自然語言處理Jieba斷詞


2024/04/07 - 爬蟲相關錯誤&刪除指定的商家紀錄
開發者：11236018 余奕博
狀態：已完成
一、修復功能
   1. 商家名稱與留言內容
      - 包含「'」單引號而無法正常儲存
      - 將字串中出現的單/雙引號前面加上「\」跳脫字元以利SQL正確解析
   2. 拆分地址
      - 受到路名中包含字元「鄉鎮市區」而無法正確拆分縣市別
      - 特定商家的地址為英譯或特殊格式，新增了獨立規則來拆分地址資料
      - 修正了正則表達式的拆分依據，使其更能符合地址的格式
   3. 商家永久歇業/暫時關閉
      - 商家標籤資料可能被「永久歇業/暫時關閉」取代
      - 判斷商家是否處於關閉或歇業狀態，並於欄位「商家標籤」中標示
   4. 選擇排序評論 -> 最相關
      - 商家若處於關閉或歇業狀態，則會導致排序按鈕在網頁中的順序不如預期
      - 修正了選擇順序可能產生變化的問題
二、新增功能
   1. 函式delete_all_records(): 移除資料庫中指定商家名稱的紀錄
      - 若爬取商家資料過程中發現該商家存在不完整的資料
      - 將資料庫中所有與該商家相關的資料移除(使用者資料除外)，以利重新爬取
      

2024/04/06 - 取得座標錯誤&未儲存關鍵字的問題
開發者：11236018 余奕博
狀態：已修復
一、觀察結果
   1. 瀏覽地圖連結時將網址格式簡化
      - 能夠正常爬取相關地點與留言資訊
      - 地圖的中心座標位置會偏離所選地點
      - 地圖只會檢查標記點是否存在於畫面中
二、實作功能
   1. 瀏覽連結時不再簡化網址，僅簡化儲存至資料庫的連結
   2. 實裝「關鍵字」對應之Keyword物件類別，並新增至資料庫


2024/04/05 - 串接資料庫&對應資料表類別
開發者：11236018 余奕博
狀態：已完成
一、實作功能
   1. 新增資料表的對應物件類別
      - 包含: Store、User、Comment、Keyword、Location、Rate
      - 將資料表中的所有欄位值作為其內部定義的變數
      - 函式
        ① to_string(): 將所有欄位值轉換成字串格式輸出
        ② exist(): 檢查指定欄位資料是否已存在於資料庫中
        ③ insert(): 將所有欄位資料新增至指定資料表
        ④ insert_if_not_exists(): 資料新增至指定資料表前確認是否已存在
   2. 串接資料庫
      - 新增欄位資料至資料庫 INSERT INTO <資料表名稱> VALUES <欄位值(字串)>
      - 檢查「User(評論者)、Store(商家)」是否已存在於資料庫中(不存在才新增)
      - 若欄位值為不存在(None)則自動轉換成資料庫中的空值(NULL)
   3. 分批查詢
      - 若商家已存在則不爬取，繼續瀏覽下一個搜尋結果
      - 避免分批查詢時重複的商家多次出現在搜尋結果中而重複爬取資料
      - 檢查商家資料是否完整，不完整則重新爬取以修復資料


2024/03/31 - 取得所有留言&重新定義名稱
開發者：11236018 余奕博
狀態：已完成
一、實作功能
   1. 系統常數定義(統一修改變數)
   2. 爬取留言不再只取得最新和最相關的前10筆，而是取得所有留言
   3. 移除「評論者」結構中的「姓名」欄位
   4. 移除「留言」結構中「次序」欄位編號代表最新或最相關留言的性質
   5. 修改了變數的命名規則，使其更具統一性與一致性
   6. 新增地點資訊欄位「預覽圖片」，以利顯示該商家的圖片在標記點上
   7. 新增函式switch_to_order: 切換評論至指定的排序模式(最新/最相關等)
   8. 移除在函式get_comments中自動切換最新與最相關排序模式的功能


2024/03/27 - 過長留言&資料庫的資料結構
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 爬取留言過長，自動展開評論以取得完整內容
   2. 定義「留言、評論者」結構，儲存相關資訊
   3. 加入函式isUserExists(id)
      - 判斷評論者ID是否已存在
      - 透過Set集合來提高查找使用者ID是否在「評論者」陣列中的效率
   4. 新增地點資訊欄位「關鍵字」，評論的關鍵字與出現次數
   5. 新增地點資訊欄位「回應次數」，業者回覆留言的次數
二、優化功能
   1. 使爬取的資料欄位結構與資料庫相容


2024/03/25 - 新增函式&優化資料結構
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 加入def函式，處理重複出現的程式碼區段
      - getComments: 取得最新與最相關留言
      - getSplitFromAddress: 將地址分割成「郵遞區號、縣市別、區域別、鄰里別、詳細地址」
   2. 資料結構
      - 新增欄位「商家(關鍵字)、評論者(ID/名稱/等級)、留言(內容/次序/時間/星星數)」等
      - 配合資料庫中資料表的欄位值(以利後續串接資料庫)
      - 留言的次序代表其屬於最新或最相關留言的對應順序
二、優化功能
   1. 重新定義多維度Json資料結構
   2. 不再輸出資料至csv檔
   3. 獨立的儲存每筆留言內容與其相關資訊


2024/03/24 - 新增所在區域欄位&爬蟲進度拆分
開發者：11236018 余奕博
狀態：已完成
一、優化功能
   1. 新增地點資訊欄位「所在區域」(包含縣市地區名稱)
   2. 每爬完一組地點資訊與評論資料後輸出至csv檔
   3. 減少過程中失敗而重新爬取的時間耗費
二、後續規劃
   1. 與資料庫串接，將資料儲存到對應之資料庫欄位
   2. 研究爬蟲程式的分流方式(同時進行多個網頁瀏覽)


2024/03/22 - 新增相關與最新留言欄位
開發者：11236018 余奕博
狀態：已完成
一、新增功能
   1. 留言內容儲存
      - 移除地點資訊欄位「留言內容」且不再儲存所有留言
      - 新增地點資訊欄位「相關留言、最新留言」
      - 爬取相關留言與最新留言前10筆資料提供使用者瀏覽
二、優化功能
   1. 捲動頁面
      - 提升效率(減少了向下捲動的動畫過程)
      - 透過ActionChains套件的move_to_element()方法指定最後一個元素
      - 搭配send_keys(Keys.PAGE_DOWN)來發送頁面向下捲動的指令
   2. 加入程式碼註解


2024/03/21 - 取得元素的名稱識別
開發者：11236018 余奕博
狀態：已完成
一、實作功能
   1. 利用Dictionary的特性來定義列舉，取得元素時能以名稱識別而非索引位置


2024/03/18 - 新增標籤欄位
開發者：11236018 余奕博
狀態：已完成
一、實作功能
   1. 新增地點資訊欄位「標籤」
   2. 內容為GoogleMap提供的地點分類


2024/03/17 - 新增留言欄位&爬取評論內容
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 新增地點資訊欄位「留言數、留言」
   2. 捲動評論清單至底部，取得所有評論內容(字串)
   3. 反覆檢查評論清單總數是否與欄位「評論數」相同
   4. 留言數 = 過濾掉不包含文字內容的評論後剩餘的評論數
   5. 將所有評論內容List[]轉換成String，暫時儲存至欄位「留言」中
二、面臨問題
   1. 若在每次捲動後都透過判斷總評論數來檢查是否至底部，是否會對效能產生影響？


2024/03/15 - 改善取得地點座標的方式
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 將在爬取評論的過程中一併等待座標顯示在網誌列
   2. 透過讀取並拆分網址列顯示的中心座標取得地點座標(忽略縮放值)
   3. 儲存到新增的地點資訊欄位「X座標、Y座標」中
   4. 如果地址欄位為None，則座標將一併顯示為None


2024/03/14 - 取得地點座標位置
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 透過右鍵開啟功能選單來取得地點所在的實際座標位置(x,y)
二、面臨問題
   1. 點在錯誤位置會導致功能選單無法正確出現，導致爬蟲抓不到
   2. 有些地點沒有實際的地址，需要加上額外的條件判斷


2024/03/12 - 取得連結網站
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 取得地點資訊中的官方網站連結


2024/03/09 - 點擊網頁評論標籤
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 選擇地點「總覽/評論/簡介」中的評論標籤


2024/03/03 - 地點資訊的取得與資料結構
開發者：11236018余奕博
狀態：已完成
一、實作功能
   1. 以JSON結構儲存地點資訊
   2. 取得地點名稱、評分、評論數、電話與網站等資料
   3. 透過Python Pandas套件進行資料處理+匯出資料
   4. 排除了網站內資料格式不同產生資料結構的問題
二、面臨問題
   1. 大量的地點資訊會佔用過長的時間
   2. 如果評論數量較大時執行效率較差
